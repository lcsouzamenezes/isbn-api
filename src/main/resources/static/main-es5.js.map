{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/components/add-isbn/add-isbn.component.html","webpack:///./src/app/components/add-provedor/add-provedor.component.html","webpack:///./src/app/components/edit-isbn/edit-isbn.component.html","webpack:///./src/app/components/edit-provedor/edit-provedor.component.html","webpack:///./src/app/components/isbns-list/isbns-list.component.html","webpack:///./src/app/components/provedores-list/provedores-list.component.html","webpack:///./src/app/shared/confirmation-dialog/confirmation-dialog.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-isbn/add-isbn.component.css","webpack:///./src/app/components/add-isbn/add-isbn.component.ts","webpack:///./src/app/components/add-provedor/add-provedor.component.css","webpack:///./src/app/components/add-provedor/add-provedor.component.ts","webpack:///./src/app/components/edit-isbn/edit-isbn.component.css","webpack:///./src/app/components/edit-isbn/edit-isbn.component.ts","webpack:///./src/app/components/edit-provedor/edit-provedor.component.css","webpack:///./src/app/components/edit-provedor/edit-provedor.component.ts","webpack:///./src/app/components/isbns-list/isbns-list.component.css","webpack:///./src/app/components/isbns-list/isbns-list.component.ts","webpack:///./src/app/components/provedores-list/provedores-list.component.css","webpack:///./src/app/components/provedores-list/provedores-list.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/shared/confirmation-dialog/confirmation-dialog.component.css","webpack:///./src/app/shared/confirmation-dialog/confirmation-dialog.component.ts","webpack:///./src/app/shared/isbn/isbn.service.ts","webpack:///./src/app/shared/isbn/isbn.ts","webpack:///./src/app/shared/provedor/provedor.service.ts","webpack:///./src/app/shared/provedor/provedor.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- Toolbar -->\\n<mat-toolbar color=\\\"primary\\\" class=\\\"header\\\">\\n  <div>Gerenciar ISBNS</div>\\n  <span class=\\\"nav-tool-items\\\">\\n    <mat-icon (click)=\\\"sidenav.toggle()\\\" class=\\\"hamburger\\\">menu</mat-icon>\\n  </span>\\n</mat-toolbar>\\n\\n<mat-sidenav-container>\\n  <!-- Sidenav -->\\n  <mat-sidenav #sidenav [mode]=\\\"isBiggerScreen() ? 'over' : 'side'\\\" [(opened)]=\\\"opened\\\" [fixedInViewport]=\\\"true\\\" [fixedTopGap]>\\n\\n    <mat-nav-list>\\n\\n      <a mat-list-item routerLinkActive=\\\"active\\\" routerLink=\\\"/isbns\\\">\\n        <mat-icon>format_list_bulleted</mat-icon> ISBNS\\n      </a>\\n\\n      <a mat-list-item routerLinkActive=\\\"active\\\" routerLink=\\\"/provedores\\\">\\n        <mat-icon>format_list_bulleted</mat-icon> Provedores\\n      </a>\\n\\n    </mat-nav-list>\\n  </mat-sidenav>\\n\\n  <!-- Main content -->\\n  <mat-sidenav-content>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","module.exports = \"<form class=\\\"isbn-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-title>Adicionar ISBN</mat-card-title>\\n\\n    <mat-card-content>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Código\\\" name=\\\"codigoIsbn\\\" [(ngModel)]=\\\"isbn.codigoIsbn\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Título\\\" name=\\\"titulo\\\" [(ngModel)]=\\\"isbn.titulo\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Tiragem\\\" name=\\\"tiragem\\\" [(ngModel)]=\\\"isbn.tiragem\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Meio de Divulgação\\\" name=\\\"meioDivulgacao\\\" [(ngModel)]=\\\"isbn.meioDivulgacao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"URL\\\" name=\\\"url\\\" [(ngModel)]=\\\"isbn.url\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Idioma\\\" name=\\\"idioma\\\" [(ngModel)]=\\\"isbn.idioma\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"País\\\" name=\\\"pais\\\" [(ngModel)]=\\\"isbn.pais\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Natureza da Obra\\\" name=\\\"naturezaObra\\\" [(ngModel)]=\\\"isbn.naturezaObra\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Tipo de Contribuição\\\" name=\\\"tipoContribuicao\\\" [(ngModel)]=\\\"isbn.tipoContribuicao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Tipo da Editora\\\" name=\\\"tipoEditora\\\" [(ngModel)]=\\\"isbn.tipoEditora\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Nome da Editora\\\" name=\\\"nomeEditora\\\" [(ngModel)]=\\\"isbn.nomeEditora\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Financiamento\\\" name=\\\"financiamento\\\" [(ngModel)]=\\\"isbn.financiamento\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Nome do Financiador\\\" name=\\\"nomeFinanciador\\\" [(ngModel)]=\\\"isbn.nomeFinanciador\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Conselho Editorial\\\" name=\\\"conselhoEditorial\\\" [(ngModel)]=\\\"isbn.conselhoEditorial\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Distribuição e Acesso\\\" name=\\\"distribuicaoAcesso\\\" [(ngModel)]=\\\"isbn.distribuicaoAcesso\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Índice Remissivo\\\" name=\\\"indiceRemessivo\\\" [(ngModel)]=\\\"isbn.indiceRemessivo\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Premiação\\\" name=\\\"premiacao\\\" [(ngModel)]=\\\"isbn.premiacao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Instituição da Premiação\\\" name=\\\"instituicaoPremiacao\\\" [(ngModel)]=\\\"isbn.instituicaoPremiacao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Indicação da Obra de Referência\\\" name=\\\"indicacaoObraReferencia\\\" [(ngModel)]=\\\"isbn.indicacaoObraReferencia\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Nome da Instituição\\\" name=\\\"nomeInstituicao\\\" [(ngModel)]=\\\"isbn.nomeInstituicao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Observação\\\" name=\\\"observacao\\\" [(ngModel)]=\\\"isbn.observacao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Cidade Editora\\\" name=\\\"cidadeEditora\\\" [(ngModel)]=\\\"isbn.cidadeEditora\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Ano\\\" name=\\\"ano\\\" [(ngModel)]=\\\"isbn.ano\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Páginas\\\" name=\\\"paginas\\\" [(ngModel)]=\\\"isbn.paginas\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Páginas Constribuição da Obra\\\" name=\\\"paginasContribuicaoObra\\\" [(ngModel)]=\\\"isbn.paginasContribuicaoObra\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Data Premiação\\\" name=\\\"dataPremiacao\\\" [(ngModel)]=\\\"isbn.dataPremiacao\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput [matDatepicker]=\\\"pickerI\\\" placeholder=\\\"Data Indicação\\\" name=\\\"dataIndicacao\\\" [(ngModel)]=\\\"isbn.dataIndicacao\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"pickerI\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #pickerI></mat-datepicker>\\n      </mat-form-field>\\n\\n      <div class=\\\"isbn-full-width\\\">\\n        <mat-checkbox name=\\\"Reedição\\\" [(ngModel)]=\\\"isbn.reedicao\\\">Reedição</mat-checkbox>\\n      </div>\\n\\n      <div class=\\\"isbn-full-width\\\">\\n        <mat-checkbox name=\\\"reempressao\\\" [(ngModel)]=\\\"isbn.reempressao\\\">Reempressão</mat-checkbox>\\n      </div>\\n\\n      <div class=\\\"isbn-full-width\\\">\\n        <mat-checkbox name=\\\"informacaoAutores\\\" [(ngModel)]=\\\"isbn.informacaoAutores\\\">Informação Autores</mat-checkbox>\\n      </div>\\n\\n      <div class=\\\"isbn-full-width\\\">\\n        <mat-checkbox name=\\\"revisaoPorPartes\\\" [(ngModel)]=\\\"isbn.revisaoPorPartes\\\">Revisão Por Partes</mat-checkbox>\\n      </div>\\n\\n    </mat-card-content>\\n\\n    <mat-card-actions class=\\\"form-action-dimension\\\">\\n      <a mat-raised-button routerLink=\\\"/isbns\\\">Voltar</a>\\n      <button mat-raised-button color=\\\"primary\\\">Salvar</button>\\n    </mat-card-actions>\\n\\n  </mat-card>\\n\\n</form>\\n\"","module.exports = \"<form class=\\\"isbn-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-title>Adicionar provedor</mat-card-title>\\n\\n    <mat-card-content>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Nome\\\" name=\\\"nome\\\" [(ngModel)]=\\\"provedor.nome\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Local\\\" name=\\\"local\\\" [(ngModel)]=\\\"provedor.local\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Classe\\\" name=\\\"classe\\\" [(ngModel)]=\\\"provedor.classe\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Ordem\\\" name=\\\"ordem\\\" [(ngModel)]=\\\"provedor.ordem\\\">\\n      </mat-form-field>\\n\\n\\n      <div class=\\\"isbn-full-width\\\">\\n        <mat-checkbox name=\\\"ativo\\\" [(ngModel)]=\\\"provedor.ativo\\\">Ativo</mat-checkbox>\\n      </div>\\n\\n    </mat-card-content>\\n\\n    <mat-card-actions class=\\\"form-action-dimension\\\">\\n      <a mat-raised-button routerLink=\\\"/provedores\\\">Voltar</a>\\n      <button mat-raised-button color=\\\"primary\\\">Salvar</button>\\n    </mat-card-actions>\\n\\n  </mat-card>\\n\\n</form>\\n\"","module.exports = \"<form class=\\\"isbn-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-title>Alterar ISBN</mat-card-title>\\n\\n    <mat-card-content>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Código\\\" name=\\\"codigoIsbn\\\" [(ngModel)]=\\\"isbn.codigoIsbn\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Título\\\" name=\\\"titulo\\\" [(ngModel)]=\\\"isbn.titulo\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Tiragem\\\" name=\\\"tiragem\\\" [(ngModel)]=\\\"isbn.tiragem\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Meio de Divulgação\\\" name=\\\"meioDivulgacao\\\" [(ngModel)]=\\\"isbn.meioDivulgacao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"URL\\\" name=\\\"url\\\" [(ngModel)]=\\\"isbn.url\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Idioma\\\" name=\\\"idioma\\\" [(ngModel)]=\\\"isbn.idioma\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"País\\\" name=\\\"pais\\\" [(ngModel)]=\\\"isbn.pais\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Natureza da Obra\\\" name=\\\"naturezaObra\\\" [(ngModel)]=\\\"isbn.naturezaObra\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Tipo de Contribuição\\\" name=\\\"tipoContribuicao\\\" [(ngModel)]=\\\"isbn.tipoContribuicao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Tipo da Editora\\\" name=\\\"tipoEditora\\\" [(ngModel)]=\\\"isbn.tipoEditora\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Nome da Editora\\\" name=\\\"nomeEditora\\\" [(ngModel)]=\\\"isbn.nomeEditora\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Financiamento\\\" name=\\\"financiamento\\\" [(ngModel)]=\\\"isbn.financiamento\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Nome do Financiador\\\" name=\\\"nomeFinanciador\\\" [(ngModel)]=\\\"isbn.nomeFinanciador\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Conselho Editorial\\\" name=\\\"conselhoEditorial\\\" [(ngModel)]=\\\"isbn.conselhoEditorial\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Distribuição e Acesso\\\" name=\\\"distribuicaoAcesso\\\" [(ngModel)]=\\\"isbn.distribuicaoAcesso\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Índice Remissivo\\\" name=\\\"indiceRemessivo\\\" [(ngModel)]=\\\"isbn.indiceRemessivo\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Premiação\\\" name=\\\"premiacao\\\" [(ngModel)]=\\\"isbn.premiacao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Instituição da Premiação\\\" name=\\\"instituicaoPremiacao\\\" [(ngModel)]=\\\"isbn.instituicaoPremiacao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Indicação da Obra de Referência\\\" name=\\\"indicacaoObraReferencia\\\" [(ngModel)]=\\\"isbn.indicacaoObraReferencia\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Nome da Instituição\\\" name=\\\"nomeInstituicao\\\" [(ngModel)]=\\\"isbn.nomeInstituicao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Observação\\\" name=\\\"observacao\\\" [(ngModel)]=\\\"isbn.observacao\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Cidade Editora\\\" name=\\\"cidadeEditora\\\" [(ngModel)]=\\\"isbn.cidadeEditora\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Ano\\\" name=\\\"ano\\\" [(ngModel)]=\\\"isbn.ano\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Páginas\\\" name=\\\"paginas\\\" [(ngModel)]=\\\"isbn.paginas\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Páginas Constribuição da Obra\\\" name=\\\"paginasContribuicaoObra\\\" [(ngModel)]=\\\"isbn.paginasContribuicaoObra\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Data Premiação\\\" name=\\\"dataPremiacao\\\" [(ngModel)]=\\\"isbn.dataPremiacao\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput [matDatepicker]=\\\"pickerI\\\" placeholder=\\\"Data Indicação\\\" name=\\\"dataIndicacao\\\" [(ngModel)]=\\\"isbn.dataIndicacao\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"pickerI\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #pickerI></mat-datepicker>\\n      </mat-form-field>\\n\\n      <div class=\\\"isbn-full-width\\\">\\n        <mat-checkbox name=\\\"Reedição\\\" [(ngModel)]=\\\"isbn.reedicao\\\">Reedição</mat-checkbox>\\n      </div>\\n\\n      <div class=\\\"isbn-full-width\\\">\\n        <mat-checkbox name=\\\"reempressao\\\" [(ngModel)]=\\\"isbn.reempressao\\\">Reempressão</mat-checkbox>\\n      </div>\\n\\n      <div class=\\\"isbn-full-width\\\">\\n        <mat-checkbox name=\\\"informacaoAutores\\\" [(ngModel)]=\\\"isbn.informacaoAutores\\\">Informação Autores</mat-checkbox>\\n      </div>\\n\\n      <div class=\\\"isbn-full-width\\\">\\n        <mat-checkbox name=\\\"revisaoPorPartes\\\" [(ngModel)]=\\\"isbn.revisaoPorPartes\\\">Revisão Por Partes</mat-checkbox>\\n      </div>\\n\\n    </mat-card-content>\\n\\n    <mat-card-actions class=\\\"form-action-dimension\\\">\\n      <a mat-raised-button routerLink=\\\"/isbns\\\">Voltar</a>\\n      <button mat-raised-button color=\\\"primary\\\">Salvar</button>\\n    </mat-card-actions>\\n\\n  </mat-card>\\n\\n</form>\\n\"","module.exports = \"<form class=\\\"isbn-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-title>Alterar provedor</mat-card-title>\\n\\n    <mat-card-content>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Nome\\\" name=\\\"nome\\\" [(ngModel)]=\\\"provedor.nome\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Local\\\" name=\\\"local\\\" [(ngModel)]=\\\"provedor.local\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput placeholder=\\\"Classe\\\" name=\\\"classe\\\" [(ngModel)]=\\\"provedor.classe\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"isbn-full-width\\\">\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Ordem\\\" name=\\\"ordem\\\" [(ngModel)]=\\\"provedor.ordem\\\">\\n      </mat-form-field>\\n\\n\\n      <div class=\\\"isbn-full-width\\\">\\n        <mat-checkbox name=\\\"ativo\\\" [(ngModel)]=\\\"provedor.ativo\\\">Ativo</mat-checkbox>\\n      </div>\\n\\n    </mat-card-content>\\n\\n    <mat-card-actions class=\\\"form-action-dimension\\\">\\n      <a mat-raised-button routerLink=\\\"/provedores\\\">Voltar</a>\\n      <button mat-raised-button color=\\\"primary\\\">Salvar</button>\\n    </mat-card-actions>\\n\\n  </mat-card>\\n\\n</form>\\n\"","module.exports = \"<mat-card>\\n\\n  <mat-form-field class=\\\"isbn-full-width\\\">\\n    <input matInput placeholder=\\\"Código\\\" name=\\\"codigoIsbn\\\" [(ngModel)]=\\\"isbn.codigoIsbn\\\">\\n  </mat-form-field>\\n\\n  <div class=\\\"botao-add\\\">\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"buscarAdicionar()\\\">Buscar e Adicionar ISBN</button>\\n  </div>\\n\\n</mat-card>\\n\\n<br>\\n\\n<mat-card>\\n\\n  <div class=\\\"botao-add\\\">\\n    <a mat-button color=\\\"primary\\\" routerLink=\\\"/isbn\\\">Adicionar ISBN</a>\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"isbns\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <ng-container matColumnDef=\\\"codigoIsbn\\\">\\n      <th mat-header-cell *matHeaderCellDef> Código ISBN </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.codigoIsbn}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"titulo\\\">\\n      <th mat-header-cell *matHeaderCellDef> Título</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.titulo}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <a mat-raised-button color=\\\"primary\\\" routerLink=\\\"/isbn/{{element.codigoIsbn}}\\\">Alterar</a>\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"confirmarExclusao(element)\\\">Excluir</button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</mat-card>\\n\"","module.exports = \"<mat-card>\\n\\n  <div class=\\\"botao-add\\\">\\n    <a mat-button color=\\\"primary\\\" routerLink=\\\"/provedor\\\">Adicionar provedor</a>\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"provedores\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <ng-container matColumnDef=\\\"nome\\\">\\n      <th mat-header-cell *matHeaderCellDef> Nome </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nome}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"local\\\">\\n      <th mat-header-cell *matHeaderCellDef> Local</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.local}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"classe\\\">\\n      <th mat-header-cell *matHeaderCellDef> Classe </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.classe}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"ordem\\\">\\n      <th mat-header-cell *matHeaderCellDef> Ordem</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ordem}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"ativo\\\">\\n      <th mat-header-cell *matHeaderCellDef> Ativo </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <mat-icon *ngIf=\\\"element.ativo\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Ativo\\\">check</mat-icon>\\n        <mat-icon *ngIf=\\\"!element.ativo\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Inativo\\\">close</mat-icon>\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <a mat-raised-button color=\\\"primary\\\" routerLink=\\\"/provedor/{{element.id}}\\\">Alterar</a>\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"confirmarExclusao(element)\\\">Excluir</button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</mat-card>\\n\"","module.exports = \"<div mat-dialog-content>\\n  {{message}}\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Não</button>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Sim</button>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AddIsbnComponent} from './components/add-isbn/add-isbn.component';\nimport {EditIsbnComponent} from './components/edit-isbn/edit-isbn.component';\nimport {IsbnsListComponent} from './components/isbns-list/isbns-list.component';\nimport {AddProvedorComponent} from './components/add-provedor/add-provedor.component';\nimport {EditProvedorComponent} from './components/edit-provedor/edit-provedor.component';\nimport {ProvedoresListComponent} from './components/provedores-list/provedores-list.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'isbns'},\n  {path: 'isbn', component: AddIsbnComponent},\n  {path: 'isbn/:id', component: EditIsbnComponent},\n  {path: 'isbns', component: IsbnsListComponent},\n\n  {path: 'provedor', component: AddProvedorComponent},\n  {path: 'provedor/:id', component: EditProvedorComponent},\n  {path: 'provedores', component: ProvedoresListComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import {Component, HostListener, OnInit, ViewChild} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n    opened = true;\n    @ViewChild('sidenav', {static: true}) sidenav: MatSidenav;\n\n    ngOnInit() {\n        console.log(window.innerWidth);\n        if (window.innerWidth < 768) {\n            this.sidenav.fixedTopGap = 55;\n            this.opened = false;\n        } else {\n            this.sidenav.fixedTopGap = 55;\n            this.opened = true;\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        if (event.target.innerWidth < 768) {\n            this.sidenav.fixedTopGap = 55;\n            this.opened = false;\n        } else {\n            this.sidenav.fixedTopGap = 55;\n            this.opened = true;\n        }\n    }\n\n    isBiggerScreen() {\n        const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        if (width < 768) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {AddIsbnComponent} from './components/add-isbn/add-isbn.component';\nimport {EditIsbnComponent} from './components/edit-isbn/edit-isbn.component';\nimport {IsbnsListComponent} from './components/isbns-list/isbns-list.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MaterialModule} from './material.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {IsbnService} from './shared/isbn/isbn.service';\nimport {FormsModule} from '@angular/forms';\nimport { ConfirmationDialogComponent } from './shared/confirmation-dialog/confirmation-dialog.component';\nimport { AddProvedorComponent } from './components/add-provedor/add-provedor.component';\nimport { EditProvedorComponent } from './components/edit-provedor/edit-provedor.component';\nimport { ProvedoresListComponent } from './components/provedores-list/provedores-list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddIsbnComponent,\n    EditIsbnComponent,\n    IsbnsListComponent,\n    ConfirmationDialogComponent,\n    AddProvedorComponent,\n    EditProvedorComponent,\n    ProvedoresListComponent\n  ],\n  imports: [\n    FormsModule,\n    MaterialModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule\n  ],\n  entryComponents: [\n    ConfirmationDialogComponent\n  ],\n  providers: [IsbnService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRkLWlzYm4vYWRkLWlzYm4uY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {Isbn} from '../../shared/isbn/isbn';\nimport {IsbnService} from '../../shared/isbn/isbn.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-add-isbn',\n  templateUrl: './add-isbn.component.html',\n  styleUrls: ['./add-isbn.component.css']\n})\nexport class AddIsbnComponent implements OnInit {\n\n  isbn: Isbn;\n\n  constructor(private isbnService: IsbnService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.isbn = new Isbn();\n  }\n\n  onSubmit() {\n    this.isbnService.save(this.isbn).subscribe(res => {\n      this.router.navigateByUrl('/isbns');\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRkLXByb3ZlZG9yL2FkZC1wcm92ZWRvci5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Provedor} from '../../shared/provedor/provedor';\nimport {ProvedorService} from '../../shared/provedor/provedor.service';\n\n@Component({\n  selector: 'app-add-provedor',\n  templateUrl: './add-provedor.component.html',\n  styleUrls: ['./add-provedor.component.css']\n})\nexport class AddProvedorComponent implements OnInit {\n\n  provedor: Provedor;\n\n  constructor(private provedorService: ProvedorService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.provedor = new Provedor();\n  }\n\n  onSubmit() {\n    this.provedorService.save(this.provedor).subscribe(res => {\n      this.router.navigateByUrl('/provedores');\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdC1pc2JuL2VkaXQtaXNibi5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {IsbnService} from '../../shared/isbn/isbn.service';\nimport {Isbn} from '../../shared/isbn/isbn';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-edit-isbn',\n  templateUrl: './edit-isbn.component.html',\n  styleUrls: ['./edit-isbn.component.css']\n})\nexport class EditIsbnComponent implements OnInit {\n\n  isbn: Isbn;\n  codigoIsbn: string;\n\n  constructor(private isbnService: IsbnService, private router: Router, private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.isbn = new Isbn();\n    this.codigoIsbn = this.route.snapshot.paramMap.get('id');\n    this.isbnService.get(this.codigoIsbn).subscribe(data => {\n      this.isbn = data;\n    });\n  }\n\n  onSubmit() {\n    console.log(this.isbn);\n    this.isbnService.update(this.codigoIsbn, this.isbn).subscribe(res => {\n      this.router.navigateByUrl('/isbns');\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdC1wcm92ZWRvci9lZGl0LXByb3ZlZG9yLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Provedor} from '../../shared/provedor/provedor';\nimport {ProvedorService} from '../../shared/provedor/provedor.service';\n\n@Component({\n  selector: 'app-edit-provedor',\n  templateUrl: './edit-provedor.component.html',\n  styleUrls: ['./edit-provedor.component.css']\n})\nexport class EditProvedorComponent implements OnInit {\n\n  provedor: Provedor;\n  id: string;\n\n  constructor(private provedorService: ProvedorService, private router: Router, private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.provedor = new Provedor();\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.provedorService.get(this.id).subscribe(data => {\n      this.provedor = data;\n    });\n  }\n\n  onSubmit() {\n    this.provedorService.update(this.id, this.provedor).subscribe(res => {\n      this.router.navigateByUrl('/provedores');\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaXNibnMtbGlzdC9pc2Jucy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {IsbnService} from '../../shared/isbn/isbn.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmationDialogComponent} from '../../shared/confirmation-dialog/confirmation-dialog.component';\nimport {Isbn} from '../../shared/isbn/isbn';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-isbns-list',\n    templateUrl: './isbns-list.component.html',\n    styleUrls: ['./isbns-list.component.css']\n})\nexport class IsbnsListComponent implements OnInit {\n\n    isbns: any = [];\n    isbn: Isbn;\n    displayedColumns = ['codigoIsbn', 'titulo', 'actions'];\n\n    constructor(private isbnService: IsbnService, public dialog: MatDialog, private router: Router) {\n    }\n\n    ngOnInit() {\n        this.carregarTabela();\n        this.isbn = new Isbn();\n    }\n\n    confirmarExclusao(isbn): void {\n        const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n            data: `Confirma a exclusão do ISBN ${isbn.codigoIsbn}?`\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('afterClosed');\n            console.log(result);\n            if (result) {\n                this.excluir(isbn.codigoIsbn);\n            }\n        });\n    }\n\n    buscarAdicionar(): void {\n        this.isbnService.get(this.isbn.codigoIsbn).subscribe(data => {\n            this.router.navigateByUrl(`/isbn/${this.isbn.codigoIsbn}`);\n        });\n    }\n\n    excluir(id: number) {\n        this.isbnService.delete(id).subscribe(res => {\n            this.carregarTabela();\n        });\n    }\n\n    carregarTabela() {\n        this.isbnService.getTodos().subscribe((isbns) => {\n            this.isbns = isbns;\n        });\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvdmVkb3Jlcy1saXN0L3Byb3ZlZG9yZXMtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material';\nimport {ConfirmationDialogComponent} from '../../shared/confirmation-dialog/confirmation-dialog.component';\nimport {ProvedorService} from '../../shared/provedor/provedor.service';\n\n@Component({\n  selector: 'app-provedores-list',\n  templateUrl: './provedores-list.component.html',\n  styleUrls: ['./provedores-list.component.css']\n})\nexport class ProvedoresListComponent implements OnInit {\n\n  provedores: any = [];\n  displayedColumns = ['nome', 'local', 'classe', 'ordem', 'ativo', 'actions'];\n\n  constructor(private provedorService: ProvedorService, public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.carregarTabela();\n  }\n\n  confirmarExclusao(provedor): void {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      data: `Confirma a exclusão do provedor ${provedor.nome}?`\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if (result) {\n        this.excluir(provedor.id);\n      }\n    });\n  }\n\n  excluir(id: number) {\n    this.provedorService.delete(id).subscribe(res => {\n      this.carregarTabela();\n    });\n  }\n\n  carregarTabela() {\n    this.provedorService.getTodos().subscribe((provedores) => {\n      this.provedores = provedores;\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {\n  MatBadgeModule,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatTableModule,\n  MatToolbarModule,\n  MatTooltipModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatListModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatDialogModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatListModule,\n    MatGridListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatDialogModule\n  ],\n  providers: [\n    MatDatepickerModule,\n  ]\n})\n\nexport class MaterialModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb25maXJtYXRpb24tZGlhbG9nL2NvbmZpcm1hdGlvbi1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public message: string) { }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {Isbn} from './isbn';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsbnService {\n\n  endpoint = 'v1/isbns';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient) {\n  }\n\n  save(data: Isbn): Observable<any> {\n    const API_URL = this.endpoint;\n    return this.http.post(API_URL, data)\n      .pipe(\n        catchError(this.errorMgmt)\n      );\n  }\n\n  getTodos() {\n    const API_URL = `${this.endpoint}`;\n    return this.http.get(API_URL);\n  }\n\n  get(id): Observable<any> {\n    const API_URL = `${this.endpoint}/${id}`;\n    return this.http.get(API_URL, {headers: this.headers}).pipe(\n      map((res: Response) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  update(id, data: Isbn): Observable<any> {\n    const API_URL = `${this.endpoint}/${id}`;\n    return this.http.put(API_URL, data, {headers: this.headers}).pipe(\n      catchError(this.errorMgmt)\n    );\n  }\n\n  delete(id): Observable<any> {\n    const API_URL = `${this.endpoint}/${id}`;\n    return this.http.delete(API_URL).pipe(\n      catchError(this.errorMgmt)\n    );\n  }\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","export class Isbn {\n    codigoIsbn: string;\n    titulo: string;\n    tiragem: string;\n    meioDivulgacao: string;\n    url: string;\n    idioma: string;\n    pais: string;\n    naturezaObra: string;\n    naturezaConteudo: string;\n    tipoContribuicao: string;\n    tipoEditora: string;\n    nomeEditora: string;\n    financiamento: string;\n    nomeFinanciador: string;\n    conselhoEditorial: string;\n    distribuicaoAcesso: string;\n    indiceRemessivo: string;\n    premiacao: string;\n    instituicaoPremiacao: string;\n    indicacaoObraReferencia: string;\n    nomeInstituicao: string;\n    observacao: string;\n    cidadeEditora: string;\n    ano: number;\n    paginas: number;\n    paginasContribuicaoObra: number;\n    reedicao: boolean;\n    reempressao: boolean;\n    informacaoAutores: boolean;\n    revisaoPorPartes: boolean;\n    dataPremiacao: Date;\n    dataIndicacao: Date;\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {Isbn} from '../isbn/isbn';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {Provedor} from './provedor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProvedorService {\n\n  endpoint = 'v1/provedores';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient) {\n  }\n\n  save(data: Provedor): Observable<any> {\n    const API_URL = this.endpoint;\n    return this.http.post(API_URL, data)\n      .pipe(\n        catchError(this.errorMgmt)\n      );\n  }\n\n  getTodos() {\n    const API_URL = `${this.endpoint}`;\n    return this.http.get(API_URL);\n  }\n\n  get(id): Observable<any> {\n    const API_URL = `${this.endpoint}/${id}`;\n    return this.http.get(API_URL, {headers: this.headers}).pipe(\n      map((res: Response) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  update(id, data: Provedor): Observable<any> {\n    const API_URL = `${this.endpoint}/${id}`;\n    return this.http.put(API_URL, data, {headers: this.headers}).pipe(\n      catchError(this.errorMgmt)\n    );\n  }\n\n  delete(id): Observable<any> {\n    const API_URL = `${this.endpoint}/${id}`;\n    return this.http.delete(API_URL).pipe(\n      catchError(this.errorMgmt)\n    );\n  }\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","export class Provedor {\n    id: number;\n    nome: string;\n    ativo: boolean;\n    local: string;\n    ordem: number;\n    classe: string;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}